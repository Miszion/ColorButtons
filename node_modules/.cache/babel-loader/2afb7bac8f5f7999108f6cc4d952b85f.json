{"ast":null,"code":"var _jsxFileName = \"/Users/a1339921/other_test/src/SquareButton.js\";\nimport React from \"react\";\nimport \"./button.css\";\nimport Tone from \"tone\";\n\nclass SquareButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onButtonPress = this.onButtonPress.bind(this);\n    this.state = {};\n    this.changeMusic = this.changeMusic.bind(this);\n    this.sayHi = this.sayHi.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      color: this.props\n    });\n  }\n\n  sayHi() {\n    console.log(\"sup\");\n  }\n\n  changeMusic(color) {\n    console.log(color);\n  }\n\n  onButtonPress() {\n    let synth = new Tone.PolySynth(6, Tone.Synth).toMaster();\n    let colorArray = [\"red\", \"darkcyan\", \"goldenrod\", \"slategrey\", \"rebeccapurple\", \"plum\", \"sandybrown\", \"pink\"];\n    let soundArray = [\"C4\", \"D4\", \"E4\", \"F4\", \"G4\", \"A4\", \"B4\", \"C5\"];\n    let soundArray2 = [\"E4\", \"F4\", \"G4\", \"A4\", \"B4\", \"C5\", \"D5\", \"E5\"];\n    let soundArray3 = [\"G4\", \"A4\", \"B4\", \"C5\", \"D5\", \"E5\", \"F5\", \"G5\"];\n    let randomNumber = Math.floor(Math.random() * colorArray.length);\n\n    while (colorArray[randomNumber] === (this.state.color || this.props.color)) {\n      randomNumber = Math.floor(Math.random() * colorArray.length);\n    }\n\n    this.setState({\n      color: colorArray[randomNumber]\n    });\n    synth.triggerAttackRelease([soundArray[randomNumber], soundArray2[randomNumber], soundArray3[randomNumber]], \"16n\");\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      className: \"square\",\n      onClick: this.onButtonPress,\n      style: {\n        backgroundColor: this.state.color || this.props.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default SquareButton;","map":{"version":3,"sources":["/Users/a1339921/other_test/src/SquareButton.js"],"names":["React","Tone","SquareButton","Component","constructor","props","onButtonPress","bind","state","changeMusic","sayHi","componentDidMount","setState","color","console","log","synth","PolySynth","Synth","toMaster","colorArray","soundArray","soundArray2","soundArray3","randomNumber","Math","floor","random","length","triggerAttackRelease","render","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CACA;AAEIC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAClB,UAAMA,KAAN;AAEA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AAEA,SAAKC,KAAL,GAAa,EAAb;AAKA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKG,KAAL,GAAa,KAAKA,KAAL,CAAWH,IAAX,CAAgB,IAAhB,CAAb;AAEH;;AAEDI,EAAAA,iBAAiB,GACjB;AACI,SAAKC,QAAL,CACI;AACIC,MAAAA,KAAK,EAAE,KAAKR;AADhB,KADJ;AAKH;;AAEDK,EAAAA,KAAK,GACL;AACII,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACH;;AAEGN,EAAAA,WAAW,CAACI,KAAD,EACX;AACIC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AAGDP,EAAAA,aAAa,GAAE;AAEX,QAAIU,KAAK,GAAG,IAAIf,IAAI,CAACgB,SAAT,CAAmB,CAAnB,EAAsBhB,IAAI,CAACiB,KAA3B,EAAkCC,QAAlC,EAAZ;AAGA,QAAIC,UAAU,GAAG,CAAC,KAAD,EAAQ,UAAR,EAAoB,WAApB,EAAiC,WAAjC,EAA8C,eAA9C,EAA+D,MAA/D,EAAuE,YAAvE,EAAqF,MAArF,CAAjB;AACA,QAAIC,UAAU,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAAjB;AACA,QAAIC,WAAW,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAAlB;AACA,QAAIC,WAAW,GAAG,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,CAAlB;AAEA,QAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAiBP,UAAU,CAACQ,MAAvC,CAAnB;;AAEA,WAAOR,UAAU,CAACI,YAAD,CAAV,MAA8B,KAAKhB,KAAL,CAAWK,KAAX,IAAoB,KAAKR,KAAL,CAAWQ,KAA7D,CAAP,EACA;AACGW,MAAAA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAiBP,UAAU,CAACQ,MAAvC,CAAf;AACF;;AAGD,SAAKhB,QAAL,CACI;AACIC,MAAAA,KAAK,EAAEO,UAAU,CAACI,YAAD;AADrB,KADJ;AAOAR,IAAAA,KAAK,CAACa,oBAAN,CAA2B,CAACR,UAAU,CAACG,YAAD,CAAX,EAA2BF,WAAW,CAACE,YAAD,CAAtC,EAAsDD,WAAW,CAACC,YAAD,CAAjE,CAA3B,EAA6G,KAA7G;AAEH;;AAIDM,EAAAA,MAAM,GAAE;AACL,WAAO;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,OAAO,EAAI,KAAKxB,aAAzC;AAAwD,MAAA,KAAK,EAAI;AAACyB,QAAAA,eAAe,EAAE,KAAKvB,KAAL,CAAWK,KAAX,IAAoB,KAAKR,KAAL,CAAWQ;AAAjD,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACF;;AAtEL;;AA6EA,eAAeX,YAAf","sourcesContent":["import React from \"react\"\nimport \"./button.css\"\nimport Tone from \"tone\"\n\nclass SquareButton extends React.Component\n{\n\n    constructor(props){\n    super(props);\n\n    this.onButtonPress = this.onButtonPress.bind(this);\n\n    this.state = {\n\n\n    }\n\n    this.changeMusic = this.changeMusic.bind(this);\n    this.sayHi = this.sayHi.bind(this);\n\n}\n\ncomponentDidMount()\n{\n    this.setState(\n        {\n            color: this.props\n        }\n    )\n}\n\nsayHi()\n{\n    console.log(\"sup\");\n}\n\n    changeMusic(color)\n    {   \n        console.log(color);\n    }\n\n\n    onButtonPress(){\n\n        let synth = new Tone.PolySynth(6, Tone.Synth).toMaster();\n\n\n        let colorArray = [\"red\", \"darkcyan\", \"goldenrod\", \"slategrey\", \"rebeccapurple\", \"plum\", \"sandybrown\", \"pink\"]\n        let soundArray = [\"C4\", \"D4\", \"E4\", \"F4\", \"G4\", \"A4\", \"B4\", \"C5\"]\n        let soundArray2 = [\"E4\", \"F4\", \"G4\", \"A4\", \"B4\", \"C5\", \"D5\", \"E5\"]\n        let soundArray3 = [\"G4\", \"A4\", \"B4\", \"C5\", \"D5\", \"E5\", \"F5\", \"G5\"]\n\n        let randomNumber = Math.floor(Math.random() * (colorArray.length));\n\n        while (colorArray[randomNumber] === (this.state.color || this.props.color))\n        {\n           randomNumber = Math.floor(Math.random() * (colorArray.length));    \n        }\n\n\n        this.setState(\n            {\n                color: colorArray[randomNumber]\n            }\n        )\n\n\n        synth.triggerAttackRelease([soundArray[randomNumber], soundArray2[randomNumber] ,soundArray3[randomNumber]], \"16n\");\n\n    }\n\n\n\n    render(){\n       return <span className=\"square\" onClick = {this.onButtonPress} style = {{backgroundColor: this.state.color || this.props.color}}></span>\n    }\n\n\n\n\n}\n\nexport default SquareButton"]},"metadata":{},"sourceType":"module"}