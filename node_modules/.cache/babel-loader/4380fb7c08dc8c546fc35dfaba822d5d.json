{"ast":null,"code":"var _jsxFileName = \"/Users/a1339921/other_test/src/SquareButton.js\";\nimport React from \"react\";\nimport \"./button.css\";\n\nclass SquareButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      position: props.position\n    };\n    this.changeColor = this.changeColor.bind(this);\n\n    if (this.props.position === -200) {\n      this.changeColor();\n    } else if (this.props.position === -100) {\n      this.changeColor();\n    } else if (this.props.position === 100) {\n      this.changeColor();\n    } else if (this.props.position === 350) {\n      this.changeColor();\n    }\n\n    this.changeColor();\n  }\n\n  changeColor() {\n    let colorArray = [\"red\", \"darkcyan\", \"goldenrod\", \"slategrey\", \"rebeccapurple\", \"plum\", \"sandybrown\", \"pink\"];\n    let randomNumber = Math.floor(Math.random() * colorArray.length);\n\n    while (colorArray[randomNumber] === this.state.color) {\n      randomNumber = Math.floor(Math.random() * colorArray.length);\n    }\n\n    let color = colorArray[randomNumber];\n    this.setState({\n      color: color\n    });\n  }\n\n  render() {\n    return React.createElement(\"span\", {\n      className: \"square\",\n      onClick: this.onButtonPress,\n      style: {\n        backgroundColor: this.state.color || this.props.color\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default SquareButton;","map":{"version":3,"sources":["/Users/a1339921/other_test/src/SquareButton.js"],"names":["React","SquareButton","Component","constructor","props","state","position","changeColor","bind","colorArray","randomNumber","Math","floor","random","length","color","setState","render","onButtonPress","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CACA;AAEIC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAClB,UAAMA,KAAN;AAGA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAEF,KAAK,CAACE;AADP,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;;AAEA,QAAI,KAAKJ,KAAL,CAAWE,QAAX,KAAwB,CAAC,GAA7B,EACA;AACG,WAAKC,WAAL;AACF,KAHD,MAIK,IAAI,KAAKH,KAAL,CAAWE,QAAX,KAAwB,CAAC,GAA7B,EACL;AACI,WAAKC,WAAL;AACH,KAHI,MAIA,IAAI,KAAKH,KAAL,CAAWE,QAAX,KAAwB,GAA5B,EACL;AACI,WAAKC,WAAL;AACH,KAHI,MAIA,IAAI,KAAKH,KAAL,CAAWE,QAAX,KAAwB,GAA5B,EACL;AACI,WAAKC,WAAL;AACH;;AAED,SAAKA,WAAL;AAIH;;AAEDA,EAAAA,WAAW,GAAE;AAET,QAAIE,UAAU,GAAG,CAAC,KAAD,EAAQ,UAAR,EAAoB,WAApB,EAAiC,WAAjC,EAA8C,eAA9C,EAA+D,MAA/D,EAAuE,YAAvE,EAAqF,MAArF,CAAjB;AACA,QAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAiBJ,UAAU,CAACK,MAAvC,CAAnB;;AAEA,WAAOL,UAAU,CAACC,YAAD,CAAV,KAA8B,KAAKL,KAAL,CAAWU,KAAhD,EACA;AACGL,MAAAA,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAiBJ,UAAU,CAACK,MAAvC,CAAf;AACF;;AAED,QAAIC,KAAK,GAAGN,UAAU,CAACC,YAAD,CAAtB;AAEA,SAAKM,QAAL,CACI;AACID,MAAAA,KAAK,EAAGA;AADZ,KADJ;AAMH;;AAIGE,EAAAA,MAAM,GAAE;AACL,WAAO;AAAM,MAAA,SAAS,EAAC,QAAhB;AAAyB,MAAA,OAAO,EAAI,KAAKC,aAAzC;AAAwD,MAAA,KAAK,EAAI;AAACC,QAAAA,eAAe,EAAE,KAAKd,KAAL,CAAWU,KAAX,IAAoB,KAAKX,KAAL,CAAWW;AAAjD,OAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACF;;AA3DL;;AAkEA,eAAed,YAAf","sourcesContent":["import React from \"react\"\nimport \"./button.css\"\n\nclass SquareButton extends React.Component\n{\n\n    constructor(props){\n    super(props);\n\n\n    this.state = {\n        position: props.position\n    }\n\n    this.changeColor = this.changeColor.bind(this)\n\n    if (this.props.position === -200)\n    {\n       this.changeColor();\n    }\n    else if (this.props.position === -100)\n    {\n        this.changeColor();\n    }\n    else if (this.props.position === 100)\n    {\n        this.changeColor();\n    }\n    else if (this.props.position === 350)\n    {\n        this.changeColor();\n    }\n\n    this.changeColor();\n\n\n\n}\n\nchangeColor(){\n\n    let colorArray = [\"red\", \"darkcyan\", \"goldenrod\", \"slategrey\", \"rebeccapurple\", \"plum\", \"sandybrown\", \"pink\"]\n    let randomNumber = Math.floor(Math.random() * (colorArray.length));\n\n    while (colorArray[randomNumber] === (this.state.color))\n    {\n       randomNumber = Math.floor(Math.random() * (colorArray.length));    \n    }\n\n    let color = colorArray[randomNumber]\n\n    this.setState(\n        {\n            color : color\n        }\n    )\n\n}\n\n\n\n    render(){\n       return <span className=\"square\" onClick = {this.onButtonPress} style = {{backgroundColor: this.state.color || this.props.color}}></span>\n    }\n\n\n\n\n}\n\nexport default SquareButton"]},"metadata":{},"sourceType":"module"}